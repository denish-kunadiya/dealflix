export const STATES = [
  { state: 'Alabama', shortCode: 'AL' },
  { state: 'Alaska', shortCode: 'AK' },
  { state: 'Arizona', shortCode: 'AZ' },
  { state: 'Arkansas', shortCode: 'AR' },
  { state: 'California', shortCode: 'CA' },
  { state: 'Colorado', shortCode: 'CO' },
  { state: 'Connecticut', shortCode: 'CT' },
  { state: 'Delaware', shortCode: 'DE' },
  { state: 'Florida', shortCode: 'FL' },
  { state: 'Georgia', shortCode: 'GA' },
  { state: 'Hawaii', shortCode: 'HI' },
  { state: 'Idaho', shortCode: 'ID' },
  { state: 'Illinois', shortCode: 'IL' },
  { state: 'Indiana', shortCode: 'IN' },
  { state: 'Iowa', shortCode: 'IA' },
  { state: 'Kansas', shortCode: 'KS' },
  { state: 'Kentucky', shortCode: 'KY' },
  { state: 'Louisiana', shortCode: 'LA' },
  { state: 'Maine', shortCode: 'ME' },
  { state: 'Maryland', shortCode: 'MD' },
  { state: 'Massachusetts', shortCode: 'MA' },
  { state: 'Michigan', shortCode: 'MI' },
  { state: 'Minnesota', shortCode: 'MN' },
  { state: 'Mississippi', shortCode: 'MS' },
  { state: 'Missouri', shortCode: 'MO' },
  { state: 'Montana', shortCode: 'MT' },
  { state: 'Nebraska', shortCode: 'NE' },
  { state: 'Nevada', shortCode: 'NV' },
  { state: 'New Hampshire', shortCode: 'NH' },
  { state: 'New Jersey', shortCode: 'NJ' },
  { state: 'New Mexico', shortCode: 'NM' },
  { state: 'New York', shortCode: 'NY' },
  { state: 'North Carolina', shortCode: 'NC' },
  { state: 'North Dakota', shortCode: 'ND' },
  { state: 'Ohio', shortCode: 'OH' },
  { state: 'Oklahoma', shortCode: 'OK' },
  { state: 'Oregon', shortCode: 'OR' },
  { state: 'Pennsylvania', shortCode: 'PA' },
  { state: 'Rhode Island', shortCode: 'RI' },
  { state: 'South Carolina', shortCode: 'SC' },
  { state: 'South Dakota', shortCode: 'SD' },
  { state: 'Tennessee', shortCode: 'TN' },
  { state: 'Texas', shortCode: 'TX' },
  { state: 'Utah', shortCode: 'UT' },
  { state: 'Vermont', shortCode: 'VT' },
  { state: 'Virginia', shortCode: 'VA' },
  { state: 'Washington', shortCode: 'WA' },
  { state: 'West Virginia', shortCode: 'WV' },
  { state: 'Wisconsin', shortCode: 'WI' },
  { state: 'Wyoming', shortCode: 'WY' },
];

export const STATES_SHORT_CODES = [...STATES.map((state) => state.shortCode)] as const;

export const IMAGE_RESERVE = {
  address: {
    imagePath: 'property/address',
    title: 'Address',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'STREET_ADDRESS',
        image_name: 'Image of street address number',
        description: 'Image of street address number, such as number on mailbox or house.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'UNIT_NUMBER',
        image_name: 'Image of the unit number for the property',
        description: 'Image of the unit number for the property',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  property: {
    imagePath: 'property',
    title: 'Property',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'STREET_LEFT',
        image_name: 'Image of street to the Left',
        description: `Image of subject's road/street to the left.
           Left as facing the subject property from the street.`,
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'STREET_RIGHT',
        image_name: 'Image of street to the Right',
        description:
          "Image of subject's road/street to the right. Right as facing the subject property from the street.",
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'FLOOR_PLAN',
        image_name: 'Image of floor plan',
        description: `Separate Image of the floor plan for each structure.  For dwelling units, represent each level of the unit in a separate image. Area calculations must be included in the floor plan.
       `,
        note: `Floor plan requirements:
        - computer generated (no hand drawn floorplans)
        - separate floor plan image for each structure 
        - separate floor plan image for each level of dwelling units
        - all interior walls
        - all exterior walls
        - legible dimensions for each exterior wall
        - legible room labels for all rooms
        - legible structure labels for all structures`,
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  road: {
    imagePath: 'property/site/offSiteFeature/road',
    title: 'Road',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'ROAD_UNDER_MAINTAINED',
        image_name: 'Image of road damage',
        description:
          'Image evidencing the lack of road maintenance (e.g. potholes, wash-outs, etc.)',
        note: 'This image should only be populated in cases where the road is privately maintained or if the property data collector does not know who maintains the road.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'adverse-site-conditions': {
    imagePath: 'property/site/siteFeature/adverseSiteConditions',
    title: 'Adverse Site Conditions',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'ADVERSE_SITE_CONDITIONS',
        image_name: 'Image of adverse conditions',
        description:
          'Image evidencing adverse factor identified (e.g. sinkhole, failing structure, etc.)',
        note: 'This image should only be populated in cases where an adverse condition has been identified. If a condition exists that is not visible, such as an odor, capture the image of the general area suspected as the source of the condition.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  garages: {
    imagePath: 'property/buildings/units/garages',
    title: 'Garages',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'GARAGE_TYPE_EXTERIOR',
        image_name: 'Image of outside of garage',
        description: `Image of the outside of the garage. Should include the entry door.
        Image type name varies depending upon the name of the garage type.`,
        note: 'If the garage was converted to living space, then evidence of this should be captured through this image. At a minimum provide images of the exterior of the garage, showing if the garage entry has been changed or removed.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'GARAGE_TYPE_INTERIOR',
        image_name: 'Image of inside of garage',
        description: `Image of the inside of the garage. Include images from opposite corners of the interior to ensure adequate coverage.
           Image type name varies depending upon the name of the garage type.`,
        note: 'If the garage was converted, then evidence of this should be captured through this image. The interior image should show the level of completion of the converted space.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'garage-deficiencies': {
    imagePath: 'property/buildings/units/garages/garageDeficiencies',
    title: 'Garage Deficiencies',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'GARAGE_DEFICIENCY_NAME_GARAGE_DEFICIENCY',
        image_name: 'Image of car storage deficiency',
        description: `Image of all garage deficiencies identified.
          Image type name varies depending on the type of car storage update selected.`,
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  view: {
    imagePath: 'property/site/siteFeature/siteView/views',
    title: 'View',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'SF_VIEW',
        image_name: 'Image of notable view',
        description: 'Image of described view',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  buildings: {
    imagePath: 'property/buildings',
    title: 'Buildings',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'VIEW_FRONT',
        image_name: 'Image of view from front of dwelling',
        description:
          'Image captured from the front of the structure showing the front yard, landscaping, and surroundings.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'VIEW_LEFT_SIDE',
        image_name: 'Image of view from left side of dwelling',
        description:
          'Image captured from the left side of the structure showing the side yard, landscaping, and surroundings. Left as facing the subject property from the street.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'VIEW_RIGHT_SIDE',
        image_name: 'Image of view from right side of dwelling',
        description:
          'Image captured from the right side of the structure showing the side yard, landscaping, and surroundings. Right as facing the subject property from the street.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'VIEW_REAR',
        image_name: 'Image of view from rear of dwelling',
        description:
          'Image captured from the back of the structure showing the backyard, landscaping, and surroundings.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'STRUCTURE_FRONT',
        image_name: 'Image of the structure front',
        description: 'Image of the front of the structure.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'STRUCTURE_LEFT_SIDE',
        image_name: 'Image of the structure left side',
        description:
          'Image of the left side of the structure. Left as facing the subject property from the street.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'STRUCTURE_RIGHT_SIDE',
        image_name: 'Image of the structure right side',
        description:
          'Image of the right side of the structure. Right as facing the subject property from the street.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'STRUCTURE_REAR',
        image_name: 'Image of the structure rear',
        description: 'Image of the back of the structure.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  location: {
    imagePath: 'property/site/siteFeature/locations/location',
    title: 'Location',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'BORDERING_INFLUENCE',
        image_name: 'Image of bordering influence',
        description: 'Image of the bordering influence captured from the subject property.',
        note: 'This image should only be populated in cases where a bordering influence (e.g. commercial property, busy road, etc.) has been identified.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'WATERFRONT',
        image_name: 'Image of water frontage',
        description:
          'Image of waterfront. User should provide images along waterfront, including images to show the height of the bank above the water.',
        note: 'This image should only be populated in cases where waterfront has been identified.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'waterfront-site-improvements': {
    imagePath: 'property/site/siteFeature/waterfrontSiteImprovements',
    title: 'Waterfront Site Improvements',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'WATERFRONT_SITE_IMPROVEMENTS',
        image_name: 'Image of waterfront improvements',
        description:
          'Image of structures and features on the waterfront (e.g. docks, bulkheads, etc.).',
        note: 'This image should only be populated in cases where waterfront improvements have been identified.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'property-improvements': {
    imagePath: 'property/site/siteFeature/propertyImprovements',
    title: 'Property Improvements',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'PROPERTY_IMPROVEMENTS',
        image_name: 'Image of property improvements',
        description:
          'Image of each site improvement identified (e.g. swimming pool, hot tub, outdoor kitchen, etc.). For items such as graywater systems that are not visible, provide images of control systems or the general area where the system is located.',
        note: 'This image should only be populated in cases where site improvements have been identified in the data.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'inground-pool-concerns': {
    imagePath: 'property/site/siteFeature/propertyImprovements/ingroundPoolConcerns',
    title: 'Inground Pool Concerns',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'INGROUND_POOL_CONCERNS',
        image_name: 'Image of swimming pool deficiencies',
        description:
          'Image of each swimming pool deficiency identified. Ensure enough images are captured to show the location and extent of the damage.',
        note: 'This image should only be populated in cases where swimming pool deficiencies have been identified in the data.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'non-residential-uses': {
    imagePath: 'property/site/siteFeature/nonResidentialUses',
    title: 'Non Residential Uses',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'NONRESIDENTIAL_USE',
        image_name: 'Image of non-residential use',
        description:
          'Image of each non-residential use identified. Provide images of the things observed that lead to the conclusion that a non-residential use exists.',
        note: 'This image should only be populated in cases where a non-residential use has been identified in the data.',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  rooms: {
    imagePath: 'property/buildings/units/levels/rooms',
    title: 'Rooms',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'ROOM',
        image_name: 'Image of room',
        description: 'Image of room',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'KITCHEN',
        image_name: 'Image of kitchen',
        description:
          'Images of the kitchen. At a minimum, images should be captured from two opposite corners in the room and provide floor to ceiling coverage.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'BATHROOM',
        image_name: 'Image of bathroom',
        description:
          'Images of the bathroom. At a minimum, images should be captured from two opposite corners in the room and provide floor to ceiling coverage.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
      {
        image_type: 'LIVING_ROOM',
        image_name: 'Image of living room',
        description:
          'Images of the living room. At a minimum, images should be captured from two opposite corners in the room and provide floor to ceiling coverage.',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  appliances: {
    imagePath: 'property/buildings/units/levels/rooms/appliances',
    title: 'Appliances',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'OVEN_RANGE',
        image_name: 'Image of the Oven/Range',
        description: 'Image of the Oven/Range or both',
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'interior-deficiencies': {
    imagePath: 'property/buildings/units/levels/rooms/interiorDeficiencies',
    title: 'Interior Deficiencies',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'INTERIOR_DEFICIENCY_NAME_INTERIOR_DEFICIENCY',
        image_name: 'Image of interior deficiency',
        description: `Image to capture each interior deficiency identified. Ensure enough images are captured to show the location and extent of the damage.
          Image type name varies depending upon the name of the deficient component.`,
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'interior-updates': {
    imagePath: 'property/buildings/units/levels/rooms/interiorUpdates',
    title: 'Interior Updates',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'INTERIOR_UPDATED_COMPONENT_INTERIOR_UPDATE',
        image_name: 'Image of interior update',
        description: `Image of the interior update identified within the room. 
          Image type name varies depending on the type of interior update selected.`,
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'exterior-deficiencies': {
    imagePath: 'property/buildings/exteriorDeficiencies',
    title: 'Exterior Deficiencies',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'EXTERIOR_DEFICIENCY_NAME_EXTERIOR_DEFICIENCY',
        image_name: 'Image of exterior deficiency',
        description: `Image to capture each exterior deficiency identified. Ensure enough images are captured to show the location and extent of the damage.
          Image type name varies depending on the name of the deficient component selected.`,
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'exterior-updates': {
    imagePath: 'property/buildings/exteriorUpdates',
    title: 'Exterior Updates',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'EXTERIOR_UPDATED_COMPONENT_EXTERIOR_UPDATE',
        image_name: 'Image of exterior update',
        description: `Image of the exterior update identified on the structure.         
          Image type name varies depending on the type of exterior update selected.`,
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'mechanical-deficiencies': {
    imagePath: 'property/buildings/units/mechanicalDeficiencies',
    title: 'Mechanical Deficiencies',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'MECHANICAL_DEFICIENCY_NAME_MECHANICAL_DEFICIENCY',
        image_name: 'Image of mechanical deficiency',
        description: `Image to capture each mechanical deficiency identified. Ensure enough images are captured to show the location and extent of the damage.          
          Image type name varies depending upon the name of the deficient component.`,
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  'mechanical-updates': {
    imagePath: 'property/buildings/units/mechanicalUpdates',
    title: 'Mechanical Updates',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [
      {
        image_type: 'MECHANICAL_UPDATED_COMPONENT_MECHANICAL_UPDATE',
        image_name: 'Image of mechanical update',
        description: `Image to capture each mechanical update identified. Ensure enough images are captured to show the location and extent of the update.          
          Image type name varies depending upon the name of the update component.`,
        note: '',
        url: '',
        is_other: false,
        id: null,
        order_id: '',
        user_id: '',
        api_image_name: '',
      },
    ],
  },
  other: {
    imagePath: '',
    title: 'Other',
    noOfImageUpload: 0,
    url: '',
    typeOfImages: [],
  },
};

export const EMPTY_IMAGE_RESERVE = {
  image_type: '',
  image_name: '',
  description: '',
  note: '',
  url: '',
  is_other: true,
  id: null,
  order_id: '',
  user_id: '',
  api_image_name: '',
};

export const ORDER_STATUS = {
  ASSIGNED: 'ASSIGNED',
  INITIATED: 'INITIATED',
  AVAILABLE: 'AVAILABLE',
  COMPLETE: 'COMPLETE',
  IN_PROGRESS: 'IN_PROGRESS',
  GSE_ACCEPTED: 'GSE_ACCEPTED',
  GSE_SUBMITTED: 'GSE_SUBMITTED',
  GSE_REJECTED: 'GSE_REJECTED',
};

export const FNM_IMAGE_STATUS = {
  META_VERIFIED: 'meta_verified',
  META_REJECTED: 'meta_rejected',
  FNM_ACCEPTED: 'fnm_accepted',
  FNM_REJECTED: 'fnm_rejected',
};

export const ORDER_STATUS_KEY_PAIRS = [
  {
    key: 'status',
    value: 'ASSIGNED',
    label: 'ASSIGNED',
  },
  {
    key: 'status',
    value: 'INITIATED',
    label: 'INITIATED',
  },
  {
    key: 'status',
    value: 'AVAILABLE',
    label: 'AVAILABLE',
  },
  {
    key: 'status',
    value: 'COMPLETE',
    label: 'COMPLETE',
  },
  {
    key: 'status',
    value: 'IN_PROGRESS',
    label: 'IN PROGRESS',
  },
  {
    key: 'status',
    value: 'GSE_ACCEPTED',
    label: 'GSE ACCEPTED',
  },
  {
    key: 'status',
    value: 'GSE_SUBMITTED',
    label: 'GSE SUBMITTED',
  },
  {
    key: 'status',
    value: 'GSE_REJECTED',
    label: 'GSE REJECTED',
  },
];

export const INITIAL_FORM_VALUES = {
  status: '',
  assignedId: '',
  onsiteContactName: '',
  onsiteContactPhone: '',
  createdAt: '',
  state: '',
  city: '',
  streetAddress: '',
  postalCode: '',
  floorsNumber: '',
  searchVal: '',
};
